@use "@/styles/abstracts/variables" as *;
@use "@/styles/abstracts/mixin" as *;

// Reusable button
.reusable-button {
  @include common-button-template;
  background-color: $primary-btn-background;
}

form {
  width: 100%;
  display: flex;
  flex-direction: column;

  .password-input {
    position: relative;
    display: flex;
    align-items: center;

    .hide-and-show-pass {
      position: absolute;
      right: 1rem;
      cursor: pointer;
      color: $primary-btn-background;

      &:hover {
        color: $primary-btn-hover;
      }
    }
  }

  // Common style for Input-box, text-area-container and -select-container
  .input-box,
  .text-area-container,
  .select-container {
    @include common-input-container-template;
  }

  .input-box,
  .select-container {
    height: 5rem;
  }

  input,
  textarea,
  select {
    @include common-input-template;
  }

  // Input box style
  .input-box {
    input {
      padding-top: 0.3rem;
    }
  }

  // date input
  /* Styling for date input */
  .date-input input {
    padding: 10px;
    font-size: 16px;
    color: #333;
    background-color: #f5f5f5; /* Light gray background */
    cursor: pointer; /* Pointer cursor for better UX */

    /* Remove the default appearance in Webkit and other browsers */
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;

    /* Hide the default calendar icon in Chrome, Firefox, and Webkit browsers */
    &::-webkit-calendar-picker-indicator {
      display: none; /* Hides the calendar icon in Chrome, Safari, and other Webkit browsers */
    }

    &::-moz-calendar-picker-indicator {
      display: none; /* Hides the calendar icon in Firefox */
    }

    /* Trigger the date picker on click or focus */
    &:focus {
      outline: none;
      border: 2px solid red; /* Optional focus effect */
    }
  }

  .date-input input:hover {
    border-color: red; /* Set hover border color */
  }

  /* Optional: For custom styling on date input's focus state */
  .date-input input:focus {
    border-color: #ff6b3b; /* Optional custom color for focus */
  }
  // Reusable Navigator
  .navigator-container {
    margin-top: -10px;
  }

  // Reusable TextArea
  .text-area-container {
    height: 10rem;

    textarea {
      padding-top: 1rem;
    }
  }

  // Resuable select component
  .select-container {
    select {
      appearance: none; /* Removes default browser styling */
      -webkit-appearance: none; /* For Safari */
      -moz-appearance: none; /* For Firefox */
      padding: 10px 20px;
      font-size: 16px;
      cursor: pointer;
    }

    option {
      padding: 10px;
      color: white;
      font-size: 16px;
    }

    // Style the select box when it's focused
    select:focus {
      border-color: $accent-color;
      outline: none;
    }
  }
}

// Alert box styles
.alert-box {
  color: $error-color;
  animation: alertAnimation 1s infinite alternate;
}

@keyframes alertAnimation {
  from {
    opacity: 1;
  }
  to {
    opacity: 0.5;
  }
}

// Style for the reusable custom toast
.custom-toast {
  font-size: 16px;
  margin-top: 7rem;
  background-color: #333;
  color: #fff;
  padding: 10px 20px;
  border-radius: 5px;
  text-align: center;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.custom-toast .toast-icon {
  margin-right: 10px;
}

// Goback ICON
.go-back {
  color: $primary-color;
  cursor: pointer;
}

// User initials container
.initials-circle {
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  // padding: 2rem;
  cursor: pointer;

  .initials {
    color: $primary-color;
    font-weight: bold;
  }
}

// Resusable Selection Card Component
.selection-card-container {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;

  .buttons-container {
    height: 20rem;
    width: 20rem;
    padding: 0.6rem;
    display: flex;
    border-radius: 1rem;
    border: none;
    cursor: pointer;
    transition: border-color 0.2s ease, box-shadow 0.3s ease;

    // Default box-shadow
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);

    &.selected {
      border: 2px solid $primary-color; // Add border when selected

      // Enhanced box-shadow on selection
      box-shadow: 0 8px 24px rgba(0, 84, 143, 0.3),
        0 4px 6px rgba(0, 84, 143, 0.15);
    }

    .buttons-wrapper {
      width: 100%;

      .input-wrapper {
        display: flex;
        justify-content: flex-end;

        input[type="checkbox"] {
          width: 2.5rem;
          height: 2.5rem;
          border-radius: 50%;
          appearance: none;
          border: 2px solid $border-color; // Keep this for the checkbox
          outline: none;
          cursor: pointer;
          position: relative;
          transition: background-color 0.2s ease, border-color 0.2s ease;

          &:checked {
            background-color: $primary-color;
            border-color: $primary-color;

            &::after {
              content: "";
              position: absolute;
              top: 3px;
              left: 7px;
              width: 4px;
              height: 11px;
              border: solid #fff;
              border-width: 0 2px 2px 0;
              transform: rotate(45deg);
              transition: opacity 0.2s ease;
            }
          }
        }
      }

      .icon-container {
        gap: 2rem;
        display: flex;
        flex-direction: column;
        align-items: center;

        .icon-wrapper {
          height: 5rem;
          width: 5rem;
          padding: 1rem;
          border-radius: 50%;
          display: flex;
          justify-content: center;
          align-items: center;
          background-color: $border-color;

          .icon {
            font-size: 10rem !important;
            color: $primary-btn-background;
          }
        }
      }
    }
  }
}

// Reusable Sidebar Component
.sidebar-container {
  background: $secondary-color;
  height: 100vh;
  width: 26rem;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 5;
  box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column;
  justify-content: space-between;

  .avatar {
    background: rgba(0, 0, 0, 0.1);
    padding: 2.5rem 1rem;
    text-align: center;
    border-bottom-left-radius: 3rem;
    border-bottom-right-radius: 3rem;

    img {
      width: 14rem;
      border-radius: 100%;
      border: 4px solid $primary-color;
      box-shadow: 0 0 0 3px rgba(255, 255, 255, 0.3);
    }

    h4 {
      font-weight: 500;
      margin-bottom: 0.5rem;
    }

    p {
      color: $primary-color;
    }
  }

  .sidebar-link-container {
    list-style: none;
    padding: 0;
    margin-top: 2rem;
    flex: 1;
    overflow-y: auto;
    padding-bottom: 3rem;

    .sidebar-link {
      display: flex;
      align-items: center;
      padding: 1rem 1.5rem;
      color: $primary-color;
      text-decoration: none;
      font-size: 1.5rem;
      transition: background 0.2s ease;

      &:hover {
        background-color: $primary-color;
        color: $background-color;
        border-radius: 0.5rem;
      }

      span {
        margin-left: 1rem;
      }
    }
  }

  .logout-button {
    position: absolute;
    bottom: 3rem;
    left: 0;
    width: 100%;
    display: flex;
    gap: 1rem;
    justify-content: center;
    align-items: center;
    background-color: $primary-btn-background;
    padding: 1rem;
    text-decoration: none;
    color: $btn-text-color;
    font-size: 1.5rem;
    font-weight: bold;
    cursor: pointer;
    transition: background 0.2s ease;

    &:hover {
      background-color: $primary-btn-hover;
    }
  }

  @media (max-width: 768px) {
    width: 20rem;

    .avatar {
      img {
        width: 10rem;
      }
    }

    .sidebar-link {
      padding: 0.8rem 1rem;
    }
  }

  @media (max-width: 576px) {
    width: 100%;
    position: absolute;
  }
}
